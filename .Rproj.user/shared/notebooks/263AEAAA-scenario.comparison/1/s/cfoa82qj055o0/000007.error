{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"lapply(species_list, function(species) {\n    scene_fish_out <- list()\n    scene_fish_out <- lapply(scene_names, function(scene_name) {\n        output_name <- load(file = paste(reach_wd, \"dss_outputs/\",  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"FUN(X[[i]], ...)","line_number":0},{"character_number":3,"end_character_number":203,"end_line_number":20,"file":"","func":"lapply(lifestages, function(a) build.10day.tables(a, species, \n    scene_list, scene_fish_out, post_tag, scene_names_full))","line_number":20},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"FUN(X[[i]], ...)","line_number":0},{"character_number":3,"end_character_number":203,"end_line_number":20,"file":"","func":"build.10day.tables(a, species, scene_list, scene_fish_out, post_tag, \n    scene_names_full)","line_number":20},{"character_number":5,"end_character_number":48,"end_line_number":15,"file":"build.10day.tables.R","func":"scene_fish_out[[i]][[\"avg_monthly_area\"]][[a]] %>% mutate(scene = names(scene_list)[i], \n    scene_name_full = scene_names_full)","line_number":13},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`_fseq`(`_lhs`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"freduce(value, `_function_list`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(function_list[[k]](value))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"function_list[[k]](value)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mutate(., scene = names(scene_list)[i], scene_name_full = scene_names_full)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mutate.tbl_df(., scene = names(scene_list)[i], scene_name_full = scene_names_full)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mutate_impl(.data, dots, caller_env())","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(structure(list(message = \"Column `scene_name_full` must be length 12 (the group size) or one, not 3\", \n    call = NULL, cppstack = NULL), class = c(\"Rcpp::exception\", \n\"C++Error\", \"error\", \"condition\")))","line_number":0}],"message":"Error: Column `scene_name_full` must be length 12 (the group size) or one, not 3\n"}