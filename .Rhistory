scene <- names(scene_fish_out)[[s]]
list.save(scene_fish_out[[s]],file=paste(reach_wd,"dss_outputs/",reach_name,"_",scene,"_post_fish.rdata",sep=""))
}
# Figures and tables for export
post_fish_figs <- lapply(species_list, function(species){
source("plot.10day.ts.R")
ten_day_ts_plt <- lapply(lifestages, function(a) plot.10day.ts(a,species,scene_fish_out,scene_list,NormalizeByL,post_tag))
names(ten_day_ts_plt) <- lifestages
post_fish_figs$ten_day_ts_plt <- ten_day_ts_plt
source("build.10day.tables.R") # currently set up for adults only
ten_day_min_outputs <- lapply(lifestages, function(a) build.10day.tables(a,species,scene_list,scene_fish_out,post_tag))
names(ten_day_min_outputs) <- lifestages
post_fish_figs$ten_day_min_outputs <- ten_day_min_outputs
source("make.barplots.chg.R")
chg_barplots <- lapply(lifestages, function(a) make.barplots.chg(a,species,ten_day_min_outputs))
names(chg_barplots) <- lifestages
post_fish_figs$chg_barplots <- chg_barplots
return(post_fish_figs)
})
names(post_fish_figs) <- species_list
# Producing Figures for Chris + Dave
# source("calc.hab.retention.R")
# hab_retention <- lapply(scene_fish_out, habitat.retention())
# source("interp.plot.abbr.R")
# scenario <- "baseline"
#
# # annual
# inter_plots_ann <- lapply(species_list, function(species) {
#   inter_tab <- scene_fish_out[[scenario]][[species]]$inter_tab
#   write.csv(inter_tab,file = paste(scenario,"_",species,"_tab.csv",sep=""))
#   interp.plot.abbr(inter_tab,NormalizeByL,as.Date("1990-01-01"),as.Date("1990-12-31"),scenario,species)
#   ggsave(paste(scenario,"_",species,"_","annual.png",sep=""),width=7, height=5,units = "in")
#   })
# names(inter_plots_ann) <- species_list
# inter_plots_ann
#
# # monthly
# inter_plots_mon <- lapply(species_list, function(species) {
#   inter_tab <- scene_fish_out[[scenario]][[species]]$inter_tab
#   interp.plot.abbr(inter_tab,NormalizeByL,as.Date("1990-07-01"),as.Date("1990-08-31"),scenario,species)
#   ggsave(paste(scenario,"_",species,"_","monthly.png",sep=""),width=7, height=5,units = "in")
# })
# names(inter_plots_mon) <- species_list
# inter_plots_mon
# Riparian vegetation post-processing
output_name <- load(file=paste(reach_wd,reach_name,"_pre_outputs.rdata",sep="")) # load rasterized 2D modeling results
eval(parse(text=paste("pre_outputs=",output_name)))
out_val_rast <- pre_outputs$out_val_rast
modeled_q <- pre_outputs$modeled_q
scene_veg_out <- list()
scene_veg_out <- lapply(scene_names, function(scene_name){
s <- scene_list[[scene_name]]
source("q.ep.weibull.R")
hydro_ep <- q.ep.weibull(s,modeled_q,scene_name)
scene_veg_out$hydro_ep <- hydro_ep
source("make.inun.q.map.R")
wet_map <- make.inun.q.map(hydro_ep,out_val_rast,modeled_q,scene_name)
scene_veg_out$wet_map <- wet_map
source("make.ep.maps.R")
ep_map <- make.ep.maps(hydro_ep,out_val_rast,modeled_q,scene_name)
scene_veg_out$ep_map <- ep_map
# make maps of probability of occurrence of vegetation
all_veg_logit <- fread(paste(reach_wd,"habitat_info","/",reach_name,"_veg_pref",".csv",sep=""),
header=TRUE, sep = ",",data.table = FALSE) # load logistic equations
source("find.veg.logit.R"); source("find.prob.occur.R"); source("make.veg.maps.R")
prob_veg_maps <- lapply(veg_list, function(v) {
one_veg_logit <- find.veg.logit(all_veg_logit,v)
hydro_ep_prob <- find.prob.occur(v,hydro_ep,one_veg_logit) # outputs table of discharge, EP of discharge, and Prob of Veg for discharge
prob_veg_maps <- make.veg.maps(v,ep_map,hydro_ep_prob,scene_name)
return(prob_veg_maps)
})
names(prob_veg_maps) <- veg_list
scene_veg_out$prob_veg_maps <- prob_veg_maps
return(scene_veg_out)
}) # end of flow scenario list function
names(scene_veg_out) <- names(scene_list)
View(baseline_q)
## Read in historic flow record (baseline)
baseline_q <- na.omit(fread(paste(reach_wd,"flow_scenarios","/",reach_name,"_baseline_q",".csv",sep=""),
header=TRUE, sep = ",",data.table=FALSE))
baseline_q$date <- as.Date(baseline_q$date)
if(DateRange=="Yes"){
baseline_q <- subset(baseline_q, date > as.Date(start_date))
baseline_q <- subset(baseline_q, date < as.Date(end_date))
}
if(LoadScenario == "Yes"){
scene_list <- lapply(scene_names, function(s){
q_ts <- na.omit(fread(file=paste(reach_wd,"flow_scenarios","/",reach_name,"_",s,".csv",sep=""),
header=TRUE, sep = ",",data.table=FALSE)) %>%
mutate(date_form = as.Date(date)) %>%
select(-date) %>%
rename(date = date_form)
if(DateRange=="Yes"){
q_ts <- subset(q_ts, date > as.Date(start_date))
q_ts <- subset(q_ts, date < as.Date(end_date))
}
return(q_ts)
})
names(scene_list) <- scene_names
scene_list$baseline_q <- baseline_q
scene_names <- names(scene_list) # updated scene name list for labeling
} else{
scene_list <- list(baseline_q)
scene_names <- "baseline_q"
names(scene_list) <- scene_names
}
# Fish post-processing
scene_fish_out <- list()
scene_fish_out <- lapply(scene_names, function(scene_name){
s <- scene_list[[scene_name]]
post_fish_outputs <- list()
post_fish_outputs <- lapply(species_list, function(species){
one_spec <- fish_outputs[[species]]
for(i in 1:length(one_spec)){ # extracts the outputs by species into their own object
tempobj = one_spec[[i]]
eval(parse(text=paste(names(one_spec)[[i]],"=tempobj")))
}
# Flow-Scenario related scripts
source("interp.table.R")
inter_tab <- lapply(lifestages, function(a) interp.table(a,s,area_look_tab,NormalizeByL))
names(inter_tab) <- lifestages
post_fish_outputs$inter_tab <- inter_tab
# Generate and view plots of total area through the hydrograph
source("interp.plot.R")
inter_plots <- interp.plot(inter_tab,NormalizeByL,species,scene_name)
names(inter_plots) <- species
post_fish_outputs$inter_plots <- inter_plots
## Generate Data Frames of moving X-Day area and discharge statistics
if(CalcXDayStats=="Yes"){
source("x.day.stats.R")
x_day_stats <- lapply(lifestages, function(a) x.day.stats(a,inter_tab,x_days,NormalizeByL,reach_length))
names(x_day_stats) <- lifestages
post_fish_outputs$x_day_stats <- x_day_stats
}
source("avg.month.area.R")
avg_monthly_area <- lapply(lifestages, function(a) avg.month.area(a,inter_tab,NormalizeByL))
names(avg_monthly_area) <- lifestages
post_fish_outputs$avg_monthly_area <- avg_monthly_area
# end of flow scenario dependent processes
return(post_fish_outputs)
}) # end of single species function
names(post_fish_outputs) <- species_list
return(post_fish_outputs)
}) # end of flow scenario list function
names(scene_fish_out) <- names(scene_list)
# save outputs (dss_outputs) for internal use
for(s in 1:length(scene_fish_out)){
scene <- names(scene_fish_out)[[s]]
list.save(scene_fish_out[[s]],file=paste(reach_wd,"dss_outputs/",reach_name,"_",scene,"_post_fish.rdata",sep=""))
}
# Figures and tables for export
post_fish_figs <- lapply(species_list, function(species){
source("plot.10day.ts.R")
ten_day_ts_plt <- lapply(lifestages, function(a) plot.10day.ts(a,species,scene_fish_out,scene_list,NormalizeByL,post_tag))
names(ten_day_ts_plt) <- lifestages
post_fish_figs$ten_day_ts_plt <- ten_day_ts_plt
source("build.10day.tables.R") # currently set up for adults only
ten_day_min_outputs <- lapply(lifestages, function(a) build.10day.tables(a,species,scene_list,scene_fish_out,post_tag))
names(ten_day_min_outputs) <- lifestages
post_fish_figs$ten_day_min_outputs <- ten_day_min_outputs
source("make.barplots.chg.R")
chg_barplots <- lapply(lifestages, function(a) make.barplots.chg(a,species,ten_day_min_outputs))
names(chg_barplots) <- lifestages
post_fish_figs$chg_barplots <- chg_barplots
return(post_fish_figs)
})
names(post_fish_figs) <- species_list
# Producing Figures for Chris + Dave
# source("calc.hab.retention.R")
# hab_retention <- lapply(scene_fish_out, habitat.retention())
# source("interp.plot.abbr.R")
# scenario <- "baseline"
#
# # annual
# inter_plots_ann <- lapply(species_list, function(species) {
#   inter_tab <- scene_fish_out[[scenario]][[species]]$inter_tab
#   write.csv(inter_tab,file = paste(scenario,"_",species,"_tab.csv",sep=""))
#   interp.plot.abbr(inter_tab,NormalizeByL,as.Date("1990-01-01"),as.Date("1990-12-31"),scenario,species)
#   ggsave(paste(scenario,"_",species,"_","annual.png",sep=""),width=7, height=5,units = "in")
#   })
# names(inter_plots_ann) <- species_list
# inter_plots_ann
#
# # monthly
# inter_plots_mon <- lapply(species_list, function(species) {
#   inter_tab <- scene_fish_out[[scenario]][[species]]$inter_tab
#   interp.plot.abbr(inter_tab,NormalizeByL,as.Date("1990-07-01"),as.Date("1990-08-31"),scenario,species)
#   ggsave(paste(scenario,"_",species,"_","monthly.png",sep=""),width=7, height=5,units = "in")
# })
# names(inter_plots_mon) <- species_list
# inter_plots_mon
# Riparian vegetation post-processing
output_name <- load(file=paste(reach_wd,reach_name,"_pre_outputs.rdata",sep="")) # load rasterized 2D modeling results
eval(parse(text=paste("pre_outputs=",output_name)))
out_val_rast <- pre_outputs$out_val_rast
modeled_q <- pre_outputs$modeled_q
scene_veg_out <- list()
scene_veg_out <- lapply(scene_names, function(scene_name){
s <- scene_list[[scene_name]]
source("q.ep.weibull.R")
hydro_ep <- q.ep.weibull(s,modeled_q,scene_name)
scene_veg_out$hydro_ep <- hydro_ep
source("make.inun.q.map.R")
wet_map <- make.inun.q.map(hydro_ep,out_val_rast,modeled_q,scene_name)
scene_veg_out$wet_map <- wet_map
source("make.ep.maps.R")
ep_map <- make.ep.maps(hydro_ep,out_val_rast,modeled_q,scene_name)
scene_veg_out$ep_map <- ep_map
# make maps of probability of occurrence of vegetation
all_veg_logit <- fread(paste(reach_wd,"habitat_info","/",reach_name,"_veg_pref",".csv",sep=""),
header=TRUE, sep = ",",data.table = FALSE) # load logistic equations
source("find.veg.logit.R"); source("find.prob.occur.R"); source("make.veg.maps.R")
prob_veg_maps <- lapply(veg_list, function(v) {
one_veg_logit <- find.veg.logit(all_veg_logit,v)
hydro_ep_prob <- find.prob.occur(v,hydro_ep,one_veg_logit) # outputs table of discharge, EP of discharge, and Prob of Veg for discharge
prob_veg_maps <- make.veg.maps(v,ep_map,hydro_ep_prob,scene_name)
return(prob_veg_maps)
})
names(prob_veg_maps) <- veg_list
scene_veg_out$prob_veg_maps <- prob_veg_maps
return(scene_veg_out)
}) # end of flow scenario list function
names(scene_veg_out) <- names(scene_list)
if(LoadScenario == "Yes"){
scene_list <- lapply(scene_names, function(s){
q_ts <- na.omit(fread(file=paste(reach_wd,"flow_scenarios","/",reach_name,"_",s,".csv",sep=""),
header=TRUE, sep = ",",data.table=FALSE)) %>%
mutate(date_form = as.Date(date)) %>%
select(-date) %>%
rename(date = date_form)
if(DateRange=="Yes"){
q_ts <- subset(q_ts, date > as.Date(start_date))
q_ts <- subset(q_ts, date < as.Date(end_date))
}
return(q_ts)
})
names(scene_list) <- scene_names
scene_list$baseline_q <- baseline_q
scene_names <- names(scene_list) # updated scene name list for labeling
} else{
scene_list <- list(baseline_q)
scene_names <- "baseline_q"
names(scene_list) <- scene_names
}
# Fish post-processing
scene_fish_out <- list()
scene_fish_out <- lapply(scene_names, function(scene_name){
s <- scene_list[[scene_name]]
post_fish_outputs <- list()
post_fish_outputs <- lapply(species_list, function(species){
one_spec <- fish_outputs[[species]]
for(i in 1:length(one_spec)){ # extracts the outputs by species into their own object
tempobj = one_spec[[i]]
eval(parse(text=paste(names(one_spec)[[i]],"=tempobj")))
}
# Flow-Scenario related scripts
source("interp.table.R")
inter_tab <- lapply(lifestages, function(a) interp.table(a,s,area_look_tab,NormalizeByL))
names(inter_tab) <- lifestages
post_fish_outputs$inter_tab <- inter_tab
# Generate and view plots of total area through the hydrograph
source("interp.plot.R")
inter_plots <- interp.plot(inter_tab,NormalizeByL,species,scene_name)
names(inter_plots) <- species
post_fish_outputs$inter_plots <- inter_plots
## Generate Data Frames of moving X-Day area and discharge statistics
if(CalcXDayStats=="Yes"){
source("x.day.stats.R")
x_day_stats <- lapply(lifestages, function(a) x.day.stats(a,inter_tab,x_days,NormalizeByL,reach_length))
names(x_day_stats) <- lifestages
post_fish_outputs$x_day_stats <- x_day_stats
}
source("avg.month.area.R")
avg_monthly_area <- lapply(lifestages, function(a) avg.month.area(a,inter_tab,NormalizeByL))
names(avg_monthly_area) <- lifestages
post_fish_outputs$avg_monthly_area <- avg_monthly_area
# end of flow scenario dependent processes
return(post_fish_outputs)
}) # end of single species function
names(post_fish_outputs) <- species_list
return(post_fish_outputs)
}) # end of flow scenario list function
names(scene_fish_out) <- names(scene_list)
# save outputs (dss_outputs) for internal use
for(s in 1:length(scene_fish_out)){
scene <- names(scene_fish_out)[[s]]
list.save(scene_fish_out[[s]],file=paste(reach_wd,"dss_outputs/",reach_name,"_",scene,"_post_fish.rdata",sep=""))
}
# Figures and tables for export
post_fish_figs <- lapply(species_list, function(species){
source("plot.10day.ts.R")
ten_day_ts_plt <- lapply(lifestages, function(a) plot.10day.ts(a,species,scene_fish_out,scene_list,NormalizeByL,post_tag))
names(ten_day_ts_plt) <- lifestages
post_fish_figs$ten_day_ts_plt <- ten_day_ts_plt
source("build.10day.tables.R") # currently set up for adults only
ten_day_min_outputs <- lapply(lifestages, function(a) build.10day.tables(a,species,scene_list,scene_fish_out,post_tag))
names(ten_day_min_outputs) <- lifestages
post_fish_figs$ten_day_min_outputs <- ten_day_min_outputs
source("make.barplots.chg.R")
chg_barplots <- lapply(lifestages, function(a) make.barplots.chg(a,species,ten_day_min_outputs))
names(chg_barplots) <- lifestages
post_fish_figs$chg_barplots <- chg_barplots
return(post_fish_figs)
})
names(post_fish_figs) <- species_list
# Producing Figures for Chris + Dave
# source("calc.hab.retention.R")
# hab_retention <- lapply(scene_fish_out, habitat.retention())
# source("interp.plot.abbr.R")
# scenario <- "baseline"
#
# # annual
# inter_plots_ann <- lapply(species_list, function(species) {
#   inter_tab <- scene_fish_out[[scenario]][[species]]$inter_tab
#   write.csv(inter_tab,file = paste(scenario,"_",species,"_tab.csv",sep=""))
#   interp.plot.abbr(inter_tab,NormalizeByL,as.Date("1990-01-01"),as.Date("1990-12-31"),scenario,species)
#   ggsave(paste(scenario,"_",species,"_","annual.png",sep=""),width=7, height=5,units = "in")
#   })
# names(inter_plots_ann) <- species_list
# inter_plots_ann
#
# # monthly
# inter_plots_mon <- lapply(species_list, function(species) {
#   inter_tab <- scene_fish_out[[scenario]][[species]]$inter_tab
#   interp.plot.abbr(inter_tab,NormalizeByL,as.Date("1990-07-01"),as.Date("1990-08-31"),scenario,species)
#   ggsave(paste(scenario,"_",species,"_","monthly.png",sep=""),width=7, height=5,units = "in")
# })
# names(inter_plots_mon) <- species_list
# inter_plots_mon
# Riparian vegetation post-processing
output_name <- load(file=paste(reach_wd,reach_name,"_pre_outputs.rdata",sep="")) # load rasterized 2D modeling results
eval(parse(text=paste("pre_outputs=",output_name)))
out_val_rast <- pre_outputs$out_val_rast
modeled_q <- pre_outputs$modeled_q
scene_veg_out <- list()
scene_veg_out <- lapply(scene_names, function(scene_name){
s <- scene_list[[scene_name]]
source("q.ep.weibull.R")
hydro_ep <- q.ep.weibull(s,modeled_q,scene_name)
scene_veg_out$hydro_ep <- hydro_ep
source("make.inun.q.map.R")
wet_map <- make.inun.q.map(hydro_ep,out_val_rast,modeled_q,scene_name)
scene_veg_out$wet_map <- wet_map
source("make.ep.maps.R")
ep_map <- make.ep.maps(hydro_ep,out_val_rast,modeled_q,scene_name)
scene_veg_out$ep_map <- ep_map
# make maps of probability of occurrence of vegetation
all_veg_logit <- fread(paste(reach_wd,"habitat_info","/",reach_name,"_veg_pref",".csv",sep=""),
header=TRUE, sep = ",",data.table = FALSE) # load logistic equations
source("find.veg.logit.R"); source("find.prob.occur.R"); source("make.veg.maps.R")
prob_veg_maps <- lapply(veg_list, function(v) {
one_veg_logit <- find.veg.logit(all_veg_logit,v)
hydro_ep_prob <- find.prob.occur(v,hydro_ep,one_veg_logit) # outputs table of discharge, EP of discharge, and Prob of Veg for discharge
prob_veg_maps <- make.veg.maps(v,ep_map,hydro_ep_prob,scene_name)
return(prob_veg_maps)
})
names(prob_veg_maps) <- veg_list
scene_veg_out$prob_veg_maps <- prob_veg_maps
return(scene_veg_out)
}) # end of flow scenario list function
names(scene_veg_out) <- names(scene_list)
# create plots of the habitat area-discharge curves
source("plot.a.q.curve.R"); source("plot.a.q.curve.in.chan.R")
area_look_plots <- lapply(lifestages, function(a) plot.a.q.curve(fish_outputs,species_list,a,NormalizeByL,fish_tag))
in_chan_area_look_plots <- lapply(lifestages, function(a) plot.a.q.curve.in.chan(fish_outputs,species_list,a,NormalizeByL,fish_tag))
area_look_plots
# Figures and tables for export
post_fish_figs <- list()
post_fish_figs <- lapply(species_list, function(species){
source("plot.10day.ts.R")
ten_day_ts_plt <- lapply(lifestages, function(a) plot.10day.ts(a,species,scene_fish_out,scene_list,NormalizeByL,post_tag))
names(ten_day_ts_plt) <- lifestages
post_fish_figs$ten_day_ts_plt <- ten_day_ts_plt
source("build.10day.tables.R") # currently set up for adults only
ten_day_min_outputs <- lapply(lifestages, function(a) build.10day.tables(a,species,scene_list,scene_fish_out,post_tag))
names(ten_day_min_outputs) <- lifestages
post_fish_figs$ten_day_min_outputs <- ten_day_min_outputs
source("make.barplots.chg.R")
chg_barplots <- lapply(lifestages, function(a) make.barplots.chg(a,species,ten_day_min_outputs))
names(chg_barplots) <- lifestages
post_fish_figs$chg_barplots <- chg_barplots
return(post_fish_figs)
})
names(post_fish_figs) <- species_list
species <- "desertsucker"
# Figures and tables for export
post_fish_figs <- list()
source("plot.10day.ts.R")
ten_day_ts_plt <- lapply(lifestages, function(a) plot.10day.ts(a,species,scene_fish_out,scene_list,NormalizeByL,post_tag))
names(ten_day_ts_plt) <- lifestages
post_fish_figs$ten_day_ts_plt <- ten_day_ts_plt
source("build.10day.tables.R") # currently set up for adults only
ten_day_min_outputs <- lapply(lifestages, function(a) build.10day.tables(a,species,scene_list,scene_fish_out,post_tag))
names(ten_day_min_outputs) <- lifestages
post_fish_figs$ten_day_min_outputs <- ten_day_min_outputs
source("make.barplots.chg.R")
chg_barplots <- lapply(lifestages, function(a) make.barplots.chg(a,species,ten_day_min_outputs))
names(chg_barplots) <- lifestages
post_fish_figs$chg_barplots <- chg_barplots
ten_day_min_outputs$adult$sum_all_yrs_dif$per_chg
# Figures and tables for export
post_fish_figs <- list()
post_fish_figs <- lapply(species_list, function(species){
source("plot.10day.ts.R")
ten_day_ts_plt <- lapply(lifestages, function(a) plot.10day.ts(a,species,scene_fish_out,scene_list,NormalizeByL,post_tag))
names(ten_day_ts_plt) <- lifestages
post_fish_figs$ten_day_ts_plt <- ten_day_ts_plt
source("build.10day.tables.R") # currently set up for adults only
ten_day_min_outputs <- lapply(lifestages, function(a) build.10day.tables(a,species,scene_list,scene_fish_out,post_tag))
names(ten_day_min_outputs) <- lifestages
post_fish_figs$ten_day_min_outputs <- ten_day_min_outputs
source("make.barplots.chg.R")
chg_barplots <- lapply(lifestages, function(a) make.barplots.chg(a,species,ten_day_min_outputs))
names(chg_barplots) <- lifestages
post_fish_figs$chg_barplots <- chg_barplots
return(post_fish_figs)
})
names(post_fish_figs) <- species_list
post_fish_figs
a <- "adult"
agg_sum_df <- ten_day_min_outputs[[a]]$sum_all_yrs_dif
View(agg_sum_df)
View(ten_day_min_outputs)
ten_day_min_out <- list()
## create table of 10-day minimum habitat area that includes all scenarios
ten_day_min <- data.frame()
for(i in 1:length(scene_list)){
avg_mon_area <- scene_fish_out[[i]][[species]][["avg_monthly_area"]][[a]] %>%
mutate(scene = names(scene_list)[i])
ten_day_min <- bind_rows(ten_day_min,avg_mon_area)
}
View(ten_day_min)
## Create tables of average 10-day minimum monthly habitat summarized by month for all years
sum_all_yrs <- ten_day_min %>%
dplyr::group_by(scene) %>%
dplyr::group_by(month,add=TRUE) %>%
summarize(mon_avg = mean(mon_avg_low_area))
ten_day_min_out$sum_all_yrs <- sum_all_yrs
## Create tables of average 10-day minimum monthly habitat summarized by month for all years
sum_all_yrs <- ten_day_min %>%
dplyr::group_by(scene) %>%
dplyr::group_by(month,add=TRUE) %>%
summarize(mon_avg = mean(mon_avg_low_area))
ten_day_min_out$sum_all_yrs <- sum_all_yrs
View(ten_day_min_out)
ten_day_min_out[[1]]
View(sum_all_yrs)
test <- ("a","b",
"c")
test <- ("a","b","c")
test <- c("a","b","c")
test1 <- test[test!=]
test1 <- test[test!="b"]
# Calculate % change between baseline and scenario habitat: scene-historic/historic*100
scenes <- scene_list[scene_list != "baseline_q"]
scenes <- scene_list[scene_list != "baseline_q"]
sum_all_yrs_dif <- data.frame()
for(j in 2:length(scenes)){
scene_name <- names(scenes)[[j]]
wide_tab <- sum_all_yrs %>%
filter(scene == "baseline_q" | scene == paste(scene_name)) %>%
pivot_wider(names_from = scene, values_from = mon_avg)
per_chg_tab <- wide_tab %>%
mutate(per_chg = ((wide_tab[[paste(scene_name)]]-wide_tab[["baseline_q"]])/wide_tab[["baseline_q"]]*100)) %>%
select(month,per_chg) %>%
mutate(scene = scene_name)
sum_all_yrs_dif <- bind_rows(sum_all_yrs_dif,per_chg_tab)
}
ten_day_min_out$sum_all_yrs_dif <- sum_all_yrs_dif
View(sum_all_yrs_dif)
View(per_chg_tab)
# Calculate % change between baseline and scenario habitat: scene-historic/historic*100
scenes <- scene_list[scene_list != "baseline_q"]
sum_all_yrs_dif <- data.frame()
for(j in 1:length(scenes)){
scene_name <- names(scenes)[[j]]
wide_tab <- sum_all_yrs %>%
filter(scene == "baseline_q" | scene == paste(scene_name)) %>%
pivot_wider(names_from = scene, values_from = mon_avg)
per_chg_tab <- wide_tab %>%
mutate(per_chg = ((wide_tab[[paste(scene_name)]]-wide_tab[["baseline_q"]])/wide_tab[["baseline_q"]]*100)) %>%
select(month,per_chg) %>%
mutate(scene = scene_name)
sum_all_yrs_dif <- bind_rows(sum_all_yrs_dif,per_chg_tab)
}
ten_day_min_out$sum_all_yrs_dif <- sum_all_yrs_dif
View(sum_all_yrs_dif)
# Figures and tables for export
post_fish_figs <- list()
post_fish_figs <- lapply(species_list, function(species){
source("plot.10day.ts.R")
ten_day_ts_plt <- lapply(lifestages, function(a) plot.10day.ts(a,species,scene_fish_out,scene_list,NormalizeByL,post_tag))
names(ten_day_ts_plt) <- lifestages
post_fish_figs$ten_day_ts_plt <- ten_day_ts_plt
source("build.10day.tables.R") # currently set up for adults only
ten_day_min_outputs <- lapply(lifestages, function(a) build.10day.tables(a,species,scene_list,scene_fish_out,post_tag))
names(ten_day_min_outputs) <- lifestages
post_fish_figs$ten_day_min_outputs <- ten_day_min_outputs
source("make.barplots.chg.R")
chg_barplots <- lapply(lifestages, function(a) make.barplots.chg(a,species,ten_day_min_outputs))
names(chg_barplots) <- lifestages
post_fish_figs$chg_barplots <- chg_barplots
return(post_fish_figs)
})
names(post_fish_figs) <- species_list
post_fish_figs
scene_veg_out$prob_veg_maps
scene_veg_out$red_25_percent$prob_veg_maps
scene_veg_out$red_25_percent$prob_veg_maps$drgt_tol_shrubs
plot(scene_veg_out$red_25_percent$prob_veg_maps$drgt_tol_shrubs)
plot(scene_veg_out$baseline_q$prob_veg_maps$drgt_tol_shrubs)
plot(scene_veg_out$baseline_q$prob_veg_maps)
