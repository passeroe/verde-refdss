rm(a)
rm(i)
source("exp.shp.R")
resultsPts <- exp.shp(a,csvList,wd,DEM,reachName,xLoc,yLoc)
### for cherry Creek ###
source("exp.shp.R")
resultsPts <- lapply(habMets, function(a) exp.shp(a,csvList,wd,DEM,reachName,xLoc,yLoc))
### for cherry Creek ###
source("exp.shp.R")
resultsPts <- lapply(habMets, function(a) exp.shp(a,csvList,wd,DEM,reachName,xLoc,yLoc))
### for cherry Creek ###
source("exp.shp.R")
resultsPts <- lapply(habMets, function(a) exp.shp(a,csvList,wd,DEM,reachName,xLoc,yLoc))
### for cherry Creek ###
source("exp.shp.R")
resultsPts <- lapply(habMets, function(a) exp.shp(a,csvList,wd,DEM,reachName,xLoc,yLoc))
### for cherry Creek ###
source("exp.shp.R")
resultsPts <- lapply(habMets, function(a) exp.shp(a,csvList,wd,DEM,reachName,xLoc,yLoc))
View(resultsPts)
a <- "depth"
i <- csvList[[1]]
depth <- grep("depth",names(csvList[[1]]),ignore.case = TRUE,value = TRUE)
sfList <- lapply(csvList, function(i){
df <- data.frame(x = i[xLoc],y = i[yLoc],z=i[a])
spHold <- SpatialPointsDataFrame(coords=df,data=df,proj4string = crs(SMR_elev))
writeOGR(spHold,dsn = "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid",
layer=paste(i,"_",a,sep=""),driver="ESRI Shapefile")
})
View(sfList)
df <- data.frame(x = i[xLoc],y = i[yLoc],z=i[a])
spHold <- SpatialPointsDataFrame(coords=df,data=df,proj4string = crs(SMR_elev))
writeOGR(spHold,dsn = "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid",
layer=paste(i,"_",a,sep=""),driver="ESRI Shapefile")
View(spHold)
rm(spTri)
View(spHold)
rm(spHold)
View(df)
df <- data.frame(x = i[xLoc],y = i[yLoc],z=i[a])
spHold <- SpatialPointsDataFrame(coords=c("x","y"),data=df,proj4string = crs(SMR_elev))
writeTry <- writeOGR(spHold,dsn = "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid",
layer=paste(i,"_",a,sep=""),driver="ESRI Shapefile")
spHold <- SpatialPointsDataFrame(coords=c("x","y"),data=df,proj4string = crs(SMR_elev))
spHold <- SpatialPointsDataFrame(coords=c(x,y),data=df,proj4string = crs(SMR_elev))
coordinates(df$x,df$y)
coordinates(df)
spHold <- SpatialPointsDataFrame(coords=df,data=df,proj4string = crs(SMR_elev))
View(spHold)
View(df)
is.na(df)
coordinates(df)<-c("x","y")
spHold <- SpatialPointsDataFrame(coords=df,data=df,proj4string = crs(SMR_elev))
df <- data.frame(x = i[xLoc],y = i[yLoc],z=i[a])
spHold <- SpatialPointsDataFrame(coords=df,data=df,proj4string = crs(SMR_elev),coords.nrs = TRUE)
df <- data.frame(x = i[xLoc],y = i[yLoc],z=i[a])
spHold <- SpatialPointsDataFrame(coords=df,data=df,proj4string = crs(SMR_elev),coords.nrs = TRUE)
spHold <- SpatialPointsDataFrame(data=df,proj4string = crs(SMR_elev))
spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
coordinates(df)<-c(x,y)
coordinates(df)<-c("x","y")
proj4string(df)<-crs(SMR_elev)
writeTry <- writeOGR(df,dsn = "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid",
layer=paste(i,"_",a,sep=""),driver="ESRI Shapefile")
writeOGR(df,dsn = "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid",
layer=paste(i,"_",a,sep=""),driver="ESRI Shapefile")
tryWrite <- writeOGR(df,dsn = "tempdir",
layer=paste(i,"_",a,sep=""),driver="ESRI Shapefile")
install.packages("GISTools")
library("GISTools", lib.loc="C:/Program Files/R/R-3.5.3/library")
writeOGR(df,dsn = "tempdir",
layer=paste(i,"_",a,sep=""),driver="ESRI Shapefile")
writeTry <- writeOGR(df,dsn = "tempdir",
layer=paste(i,"_",a,sep=""),driver="ESRI Shapefile")
tempdir()
install.packages("shapefiles")
writeTry <- writeOGR(df,dsn = "U:/shpexptest",
layer=paste(i,"_",a,sep=""),driver="ESRI Shapefile")
View(df)
data(tornados)
writeOGR(obj=torn, dsn="tempdir", layer="torn", driver="ESRI Shapefile") # this is in geographical projection
data(tornados)
writeOGR(obj=torn, dsn="U:/shpexptest", layer="torn", driver="ESRI Shapefile") # this is in geographical projection
df <- data.frame(x = i[xLoc],y = i[yLoc],z=i[a])
#spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
writeTry <- writeOGR(df,dsn = "U:/shpexptest",
layer=i,driver="ESRI Shapefile")
View(i)
paste(a,"_",i,sep="") <- data.frame(x = i[xLoc],y = i[yLoc],z=i[a])
names(csvList[[i]]) <- data.frame(x = i[xLoc],y = i[yLoc],z=i[a])
View(csvList)
pfolder <- "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid/"
afolder <- paste(pfolder,a,sep="")
View(csvList)
dsn <- paste(afolder,names(csvList[[i]]))
### for cherry Creek ###
source("exp.shp.R")
resultsPts <- lapply(habMets, function(a) exp.shp(a,csvList,wd,DEM,reachName,xLoc,yLoc))
csvList[[1]]
sfList <- lapply(csvList, function(i){
dsn <- paste(afolder,names(csvList[[i]]),sep="")
df <- data.frame(x = i[xLoc],y = i[yLoc],z=i[a])
#spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
writeTry <- writeOGR(df,dsn = dsn,
layer=df,driver="ESRI Shapefile")
})
csvList[i]
View(csvList)
csvList[[2]]
rm(i)
sfList <- lapply(csvList, function(i){
dsn <- paste(afolder,names(csvList[[i]]),sep="")
df <- data.frame(x = i[xLoc],y = i[yLoc],z=i[a])
#spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
writeTry <- writeOGR(df,dsn = dsn,
layer=df,driver="ESRI Shapefile")
})
names(i)
rm(abc)
View(csvList)
g<-csvList[[1]]
names(g)
length(csvList)
View(sfList)
csvList[[1]][x]
csvList[[1]][,x]
csvList[[1]]["x"]
for(i in 1:length(csvList)){
dsn <- paste(afolder,names(cvsList[[i]]),sep="")
df <- data.frame(x = csvList[[i]][xloc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
writeTry <- writeOGR(df,dsn = dsn,
layer=df,driver="ESRI Shapefile")
}
for(i in 1:length(csvList)){
dsn <- paste(afolder,names(csvList[[i]]),sep="")
df <- data.frame(x = csvList[[i]][xloc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
writeTry <- writeOGR(df,dsn = dsn,
layer=df,driver="ESRI Shapefile")
}
for(i in 1:length(csvList)){
dsn <- paste(afolder,names(csvList[[i]]),sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
writeTry <- writeOGR(df,dsn = dsn,
layer=df,driver="ESRI Shapefile")
}
dsn
head(dsn)
rm(dsn)
csvList[[1]]
names(csvList)(1)
names(csvList)
layNames <- names(csvList)
dsn <- paste(afolder,layNames[i],sep="")
for(i in 1:length(csvList)){
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
writeTry <- writeOGR(df,dsn = dsn,
layer=df,driver="ESRI Shapefile")
}
for(i in 1:length(csvList)){
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
coordinates(df)<-c("x","y")
proj4string(df)<-crs(SMR_elev)
#spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
writeTry <- writeOGR(df,dsn = dsn,
layer=df,driver="ESRI Shapefile")
}
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
coordinates(df)<-c("x","y")
proj4string(df)<-crs(SMR_elev)
#spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
writeTry <- writeOGR(df,dsn = dsn,
layer=df,driver="ESRI Shapefile")
View(df)
View(df)
for(i in 1:length(csvList)){
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
coordinates(df)<-c("x","y")
proj4string(df)<-crs(SMR_elev)
#spHold <- SpatialPointsDataFrame(data=df,coords=xy,proj4string = crs(SMR_elev))
writeOGR(df,dsn = dsn,layer=df,driver="ESRI Shapefile")
}
df
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
writeOGR(df,dsn = spHold,layer=df,driver="ESRI Shapefile")
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
writeOGR(spHold,dsn = spHold,layer=df,driver="ESRI Shapefile")
dns
dsn
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
writeOGR(spHold,dsn = dsn,layer=df,driver="ESRI Shapefile")
afolder <- paste(pfolder,"/",a,sep="")
warnings()
afolder <- paste(pfolder,a,"/",sep="")
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
writeOGR(spHold,dsn = dsn,layer=df,driver="ESRI Shapefile")
for(i in 1:length(csvList)){
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = dsn,layer=df,driver="ESRI Shapefile")
}
for(i in 1:length(csvList)){
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = dsn,layer=spHold,driver="ESRI Shapefile")
}
for(i in 1:length(csvList)){
layNames <- names(csvList)
dsn <- paste(afolder,"_",layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = dsn,layer="spHold",driver="ESRI Shapefile")
}
for(i in 1:length(csvList)){
layNames <- names(csvList)
dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = dsn,layer="spHold",driver="ESRI Shapefile",morphToESRI = TRUE)
}
for(i in 1:length(csvList)){
layNames <- names(csvList)
dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = dsn,layer=layNames[i],driver="ESRI Shapefile",morphToESRI = TRUE)
}
paste(a,layNames[1])
for(i in 1:length(csvList)){
layNames <- names(csvList)
dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = dsn,layer=paste(a,"_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
for(i in 1:length(csvList)){
layNames <- names(csvList)
#dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste(a,"_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
for(i in 1:length(csvList)){
layNames <- names(csvList)
#dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste(a,"_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
afolder <- paste(pfolder,a,sep="")
for(i in 1:length(csvList)){
layNames <- names(csvList)
#dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste(a,"_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
##### Flow duration stuff
mysite<-'02088000'
parameterCd <- "00060"
startDate <- "1940-10-01"
endDate <- "2018-09-30"
dailymean<-readNWISdv(mysite,parameterCd,startDate,endDate)
### STEP 4
### Split the downloaded data into periods
decd <- list()
#decd$dis_80<-subset(dailymean,
#                    Date>="1940-10-01"
#                   &Date<="1980-09-30")
decd$dis_90<-subset(dailymean,
Date>="1980-10-01"
&Date<="1990-09-30")
decd$dis_00<-subset(dailymean,
Date>="1980-10-01"
&Date<="2000-09-30")
decd$dis_10<-subset(dailymean,
Date>="1980-10-01"
&Date<="2010-09-30")
decd$dis_20<-subset(dailymean,
Date>="1980-10-01"
&Date<="2018-09-30")
source("U:\\urban\\proj.fdc.R")
fdcs <- lapply(decd,function(j) proj.fdc(j))
plot_ly() %>%
#add_lines(x=fdcs$dis_80$exceedprob,y=fdcs$dis_80$discharge,name="1980",line=list(color='black')) %>%
add_lines(x=fdcs$dis_90$exceedprob,y=fdcs$dis_90$discharge,name="1990",line=list(color='blue')) %>%
add_lines(x=fdcs$dis_00$exceedprob,y=fdcs$dis_00$discharge,name="2000",line=list(color='green')) %>%
add_lines(x=fdcs$dis_10$exceedprob,y=fdcs$dis_10$discharge,name="2010",line=list(color='orange')) %>%
add_lines(x=fdcs$dis_20$exceedprob,y=fdcs$dis_20$discharge,name="2017",line=list(color='red')) %>%
layout(title=paste("Flow Duration Curves ",mysite,", Middle Creek",sep=""),xaxis=list(title="% Time flow equalled or exceeded",tickformat="%"),
yaxis=list(title="Streamflow (cfs)",type="log",exponentformat="none"))
##### Flow duration stuff
mysite<-'02088000'
parameterCd <- "00060"
startDate <- "1940-10-01"
endDate <- "2018-09-30"
dailymean<-readNWISdv(mysite,parameterCd,startDate,endDate)
### STEP 4
### Split the downloaded data into periods
decd <- list()
#decd$dis_80<-subset(dailymean,
#                    Date>="1940-10-01"
#                   &Date<="1980-09-30")
decd$dis_90<-subset(dailymean,
Date>="1980-10-01"
&Date<="1990-09-30")
decd$dis_00<-subset(dailymean,
Date>="1980-10-01"
&Date<="2000-09-30")
decd$dis_10<-subset(dailymean,
Date>="1980-10-01"
&Date<="2010-09-30")
decd$dis_20<-subset(dailymean,
Date>="1980-10-01"
&Date<="2018-09-30")
plot_ly() %>%
#add_lines(x=fdcs$dis_80$exceedprob,y=fdcs$dis_80$discharge,name="1980",line=list(color='black')) %>%
add_lines(x=fdcs$dis_90$exceedprob,y=fdcs$dis_90$discharge,name="1990",line=list(color='blue')) %>%
add_lines(x=fdcs$dis_00$exceedprob,y=fdcs$dis_00$discharge,name="2000",line=list(color='green')) %>%
add_lines(x=fdcs$dis_10$exceedprob,y=fdcs$dis_10$discharge,name="2010",line=list(color='orange')) %>%
add_lines(x=fdcs$dis_20$exceedprob,y=fdcs$dis_20$discharge,name="2017",line=list(color='red')) %>%
layout(title=paste("Flow Duration Curves ",mysite,", Middle Creek",sep=""),xaxis=list(title="% Time flow equalled or exceeded",tickformat="%"),
yaxis=list(title="Streamflow (cfs)",type="log",exponentformat="none"))
View(fdcs)
source("U:\\urban\\proj.fdc.R")
fdcs <- lapply(decd,function(j) proj.fdc(j))
plot_ly() %>%
#add_lines(x=fdcs$dis_80$exceedprob,y=fdcs$dis_80$discharge,name="1980",line=list(color='black')) %>%
add_lines(x=fdcs$dis_90$exceedprob,y=fdcs$dis_90$discharge,name="1990",line=list(color='blue')) %>%
add_lines(x=fdcs$dis_00$exceedprob,y=fdcs$dis_00$discharge,name="2000",line=list(color='green')) %>%
add_lines(x=fdcs$dis_10$exceedprob,y=fdcs$dis_10$discharge,name="2010",line=list(color='orange')) %>%
add_lines(x=fdcs$dis_20$exceedprob,y=fdcs$dis_20$discharge,name="2017",line=list(color='red')) %>%
layout(title=paste("Flow Duration Curves ",mysite,", Middle Creek",sep=""),xaxis=list(title="% Time flow equalled or exceeded",tickformat="%"),
yaxis=list(title="Streamflow (cfs)",type="log",exponentformat="none"))
##### Flow duration stuff
mysite<-'02087500'
parameterCd <- "00060"
startDate <- "1940-10-01"
endDate <- "2018-09-30"
dailymean<-readNWISdv(mysite,parameterCd,startDate,endDate)
### STEP 4
### Split the downloaded data into periods
decd <- list()
#decd$dis_80<-subset(dailymean,
#                    Date>="1940-10-01"
#                   &Date<="1980-09-30")
decd$dis_90<-subset(dailymean,
Date>="1980-10-01"
&Date<="1990-09-30")
decd$dis_00<-subset(dailymean,
Date>="1980-10-01"
&Date<="2000-09-30")
decd$dis_10<-subset(dailymean,
Date>="1980-10-01"
&Date<="2010-09-30")
decd$dis_20<-subset(dailymean,
Date>="1980-10-01"
&Date<="2018-09-30")
source("U:\\urban\\proj.fdc.R")
fdcs <- lapply(decd,function(j) proj.fdc(j))
plot_ly() %>%
#add_lines(x=fdcs$dis_80$exceedprob,y=fdcs$dis_80$discharge,name="1980",line=list(color='black')) %>%
add_lines(x=fdcs$dis_90$exceedprob,y=fdcs$dis_90$discharge,name="1990",line=list(color='blue')) %>%
add_lines(x=fdcs$dis_00$exceedprob,y=fdcs$dis_00$discharge,name="2000",line=list(color='green')) %>%
add_lines(x=fdcs$dis_10$exceedprob,y=fdcs$dis_10$discharge,name="2010",line=list(color='orange')) %>%
add_lines(x=fdcs$dis_20$exceedprob,y=fdcs$dis_20$discharge,name="2017",line=list(color='red')) %>%
layout(title=paste("Flow Duration Curves ",mysite,", Upper Neuse",sep=""),xaxis=list(title="% Time flow equalled or exceeded",tickformat="%"),
yaxis=list(title="Streamflow (cfs)",type="log",exponentformat="none"))
for(i in 1:length(csvList)){
layNames <- names(csvList)
#dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste("d","_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
a <- "velocity"
afolder <- paste(pfolder,a,sep="")
for(i in 1:length(csvList)){
layNames <- names(csvList)
#dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste("d","_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
for(i in 1:length(csvList)){
layNames <- names(csvList)
#dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste("v","_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
nam <- "d_cfs_4_8"
parse_number(nam)
nam <- "d_cfs_4.8"
parse_number(nam)
afolder <- "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid/vd_4_8"
for(i in 1:length(csvList)){
layNames <- names(csvList)
#dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste("v","_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
a <- "depth"
for(i in 1:length(csvList)){
layNames <- names(csvList)
#dsn <- paste(afolder,layNames[i],sep="")
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
#coordinates(df)<-c("x","y")
#proj4string(df)<-crs(SMR_elev)
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(SMR_elev))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste("d","_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
afolder <- "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid/vd_4_8"
shpPath <- "C:/Users/epassero/Desktop/VRDSS/!HoJo-CherryCreekStuff/ArcGISstuff/PresentationLayers_data/site_clip.shp"
shapefile(shpPath)
site_clip <-shapefile(shpPath)
crs(site_clip)
a <- "depth"
shpPath <- "C:/Users/epassero/Desktop/VRDSS/!HoJo-CherryCreekStuff/ArcGISstuff/PresentationLayers_data/site_clip.shp"
site_clip <-shapefile(shpPath)
pfolder <- "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid/"
afolder <- paste(pfolder,a,sep="")
for(i in 1:length(csvList)){
layNames <- names(csvList)
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(site_clip))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste("d","_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
a <- "depth"
shpPath <- "C:/Users/epassero/Desktop/VRDSS/!HoJo-CherryCreekStuff/ArcGISstuff/PresentationLayers_data/site_clip.shp"
site_clip <-shapefile(shpPath)
pfolder <- "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid/"
afolder <- paste(pfolder,a,sep="")
for(i in 1:length(csvList)){
layNames <- names(csvList)
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(site_clip))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste("d","_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
a <- "velocity"
shpPath <- "C:/Users/epassero/Desktop/VRDSS/!HoJo-CherryCreekStuff/ArcGISstuff/PresentationLayers_data/site_clip.shp"
site_clip <-shapefile(shpPath)
pfolder <- "C:/Users/epassero/Desktop/VRDSS/Delaware_Cherry_doc/CherryCreek_DSS/ModelingOutput/BraidedSite/TIN2grid/"
afolder <- paste(pfolder,a,sep="")
for(i in 1:length(csvList)){
layNames <- names(csvList)
df <- data.frame(x = csvList[[i]][xLoc],y = csvList[[i]][yLoc],z=csvList[[i]][a])
spHold <- SpatialPointsDataFrame(data=df,coords=df,proj4string = crs(site_clip))
tryWrite <- writeOGR(spHold,dsn = afolder,layer=paste("v","_",layNames[i],sep=""),driver="ESRI Shapefile",morphToESRI = TRUE)
}
