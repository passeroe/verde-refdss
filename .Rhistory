colnames(intUniQ) <- c("discharge","totalArea","normalizedArea")
} else{
intUniQ <- data.frame(intTot)
colnames(intUniQ) <- c("discharge","totalArea")
}
hydrograph$totalArea <- intUniQ[match(hydrograph$discharge,intUniQ$discharge),"totalArea"]
if(NormalizeByL=="Yes"){
hydrograph$normalizedArea <- intUniQ[match(hydrograph$discharge,intUniQ$discharge),"normalizedArea"]
}
## Generate Interpolated Discharge-Area Lookup Tables from Hydrograph and Regression
source("interp.table.R")
interTab <- lapply(lifestages, function(a) interp.table(a,hydrograph,areaLookTab,NormalizeByL))
names(interTab) <- lifestages
View(interTab)
View(intNL)
if(NormalizeByL=="Yes"){
intNL <- uniqueQ[,c(1,3)]
intNL <- approx(uniqueQ,method="linear",xout=uniqueQ$discharge) # linearly interpolate for missing normalized area values
intUniQ <- data.frame(intTot,intNL,intNL[[2]])
colnames(intUniQ) <- c("discharge","totalArea","normalizedArea")
}
View(intNL)
intNL <- uniqueQ[,c(1,3)]
View(intNL)
intNL <- approx(intNL,method="linear",xout=uniqueQ$discharge) # linearly interpolate for missing normalized area values
intUniQ <- data.frame(intTot,intNL,intNL[[2]])
View(intNL)
aLT <- areaLookTab[[a]]
uniqueQ <- bind_rows(aLT,data.frame(anti_join(hydrograph["discharge"],aLT["discharge"]))) # all discharges that will be in area-lookup table
uniqueQ <- arrange(uniqueQ,discharge) # puts discharges in ascending order
intTot <- approx(uniqueQ,method="linear",xout=uniqueQ$discharge) # linearly interpolate for missing total available area values
if(NormalizeByL=="Yes"){
intNL <- uniqueQ[,c(1,3)]
intNL <- approx(intNL,method="linear",xout=uniqueQ$discharge) # linearly interpolate for missing normalized area values
intUniQ <- data.frame(intTot,intNL,intNL[[2]])
colnames(intUniQ) <- c("discharge","totalArea","normalizedArea")
} else{
intUniQ <- data.frame(intTot)
colnames(intUniQ) <- c("discharge","totalArea")
}
hydrograph$totalArea <- intUniQ[match(hydrograph$discharge,intUniQ$discharge),"totalArea"]
if(NormalizeByL=="Yes"){
hydrograph$normalizedArea <- intUniQ[match(hydrograph$discharge,intUniQ$discharge),"normalizedArea"]
}
## Generate Interpolated Discharge-Area Lookup Tables from Hydrograph and Regression
source("interp.table.R")
interTab <- lapply(lifestages, function(a) interp.table(a,hydrograph,areaLookTab,NormalizeByL))
names(interTab) <- lifestages
## Generate Interpolated Discharge-Area Lookup Tables from Hydrograph and Regression
source("interp.table.R")
interTab <- lapply(lifestages, function(a) interp.table(a,hydrograph,areaLookTab,NormalizeByL))
names(interTab) <- lifestages
View(interTab)
aLT <- areaLookTab[[a]]
uniqueQ <- bind_rows(aLT,data.frame(anti_join(hydrograph["discharge"],aLT["discharge"]))) # all discharges that will be in area-lookup table
uniqueQ <- arrange(uniqueQ,discharge) # puts discharges in ascending order
intTot <- approx(uniqueQ,method="linear",xout=uniqueQ$discharge) # linearly interpolate for missing total available area values
if(NormalizeByL=="Yes"){
intNL <- uniqueQ[,c(1,3)]
intNL <- approx(intNL,method="linear",xout=uniqueQ$discharge) # linearly interpolate for missing normalized area values
intUniQ <- data.frame(intTot,intNL[[2]])
colnames(intUniQ) <- c("discharge","totalArea","normalizedArea")
} else{
intUniQ <- data.frame(intTot)
colnames(intUniQ) <- c("discharge","totalArea")
}
View(intUniQ)
hydrograph$totalArea <- intUniQ[match(hydrograph$discharge,intUniQ$discharge),"totalArea"]
if(NormalizeByL=="Yes"){
hydrograph$normalizedArea <- intUniQ[match(hydrograph$discharge,intUniQ$discharge),"normalizedArea"]
}
View(hydrograph)
aLT <- areaLookTab[[a]]
uniqueQ <- bind_rows(aLT,data.frame(anti_join(hydrograph["discharge"],aLT["discharge"]))) # all discharges that will be in area-lookup table
View(uniqueQ)
aLT <- areaLookTab[[a]]
uniqueQ <- bind_rows(aLT,data.frame(anti_join(hydrograph["discharge"],aLT["discharge"]))) # all discharges that will be in area-lookup table
uniqueQ <- unique(arrange(uniqueQ,discharge)) # puts discharges in ascending order and removes duplicates
intTot <- approx(uniqueQ,method="linear",xout=uniqueQ$discharge) # linearly interpolate for missing total available area values
if(NormalizeByL=="Yes"){
intNL <- uniqueQ[,c(1,3)]
intNL <- approx(intNL,method="linear",xout=uniqueQ$discharge) # linearly interpolate for missing normalized area values
intUniQ <- data.frame(intTot,intNL[[2]])
colnames(intUniQ) <- c("discharge","totalArea","normalizedArea")
} else{
intUniQ <- data.frame(intTot)
colnames(intUniQ) <- c("discharge","totalArea")
}
hydrograph$totalArea <- intUniQ[match(hydrograph$discharge,intUniQ$discharge),"totalArea"]
if(NormalizeByL=="Yes"){
hydrograph$normalizedArea <- intUniQ[match(hydrograph$discharge,intUniQ$discharge),"normalizedArea"]
}
View(hydrograph)
## Generate Interpolated Discharge-Area Lookup Tables from Hydrograph and Regression
source("interp.table.R")
interTab <- lapply(lifestages, function(a) interp.table(a,hydrograph,areaLookTab,NormalizeByL))
names(interTab) <- lifestages
View(interTab)
source("avg.month.area.R")
avgMonthlyArea <- lapply(lifestages, function(a) avg.month.area(a,interTab))
names(avgMonthlyArea) <- lifestages
View(avgMonthlyArea)
View(avgMonthlyArea[["adult"]])
species
View(areaLookTab)
View(avgMonthlyArea)
View(avgMonthlyArea[["adult"]])
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
View(moveDF)
# Monthly stats using lowest consecutive 10 days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-10)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
low10DF <- filter(moveDF,day >= 5)
tblTab <- tbl_df(low10DF)
runMonth <- group_by(tblTab,year(date)) %>%
group_by(month(date),add=TRUE) %>%
summarise(MonAvgLowArea=mean(low10DAvgArea))
View(runDays)
# Monthly stats using lowest consecutive 10 days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
low10DF <- filter(moveDF,day >= 5)
tblTab <- tbl_df(low10DF)
runMonth <- group_by(tblTab,year(date)) %>%
group_by(month(date),add=TRUE) %>%
summarise(MonAvgLowArea=mean(low10DAvgArea))
# Monthly stats using lowest consecutive 10 days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:allDays){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
low10DF <- filter(moveDF,day >= 5)
tblTab <- tbl_df(low10DF)
runMonth <- group_by(tblTab,year(date)) %>%
group_by(month(date),add=TRUE) %>%
summarise(MonAvgLowArea=mean(low10DAvgArea))
View(runDays)
View(moveDF)
View(runMonth)
View(runDays)
is.na(moveDF$low10DAvgArea)
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
low10DF <- filter(moveDF, is.na(moveDF$low10DAvgArea)==FALSE)
View(low10DF)
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:725){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
low10DF <- filter(moveDF, is.na(moveDF$low10DAvgArea)==FALSE)
tblTab <- tbl_df(low10DF)
runMonth <- group_by(tblTab,year(date)) %>%
group_by(month(date),add=TRUE) %>%
summarise(MonAvgLowArea=mean(low10DAvgArea))
rm(runDays)
rm(moveDF)
rm(low10DF)
# Monthly stats using lowest consecutive 10 days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
low10DF <- filter(moveDF, is.na(moveDF$low10DAvgArea)==FALSE)
tblTab <- tbl_df(low10DF)
runMonth <- group_by(tblTab,year(date)) %>%
group_by(month(date),add=TRUE) %>%
summarise(MonAvgLowArea=mean(low10DAvgArea))
moveDF[1]$date
moveDF$date[1]
moveDF$low10DAvgArea[725]
for(i in 5:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
rm(df)
rm(moveDF)
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
mean(runDays$normalizedArea)
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
moveDF <- data.frame(date=interTab[[a]]$date)
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
View(runDays)
for(i in 5:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
View(moveDF)
# Monthly stats using lowest consecutive 10 days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-5)){
firstDay <- i-5
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
low10DF <- filter(moveDF, is.na(moveDF$low10DAvgArea)==FALSE)
tblTab <- tbl_df(low10DF)
runMonth <- group_by(tblTab,year(date)) %>%
group_by(month(date),add=TRUE) %>%
summarise(MonAvgLowArea=mean(low10DAvgArea))
# Monthly stats using lowest consecutive 10 days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-5)){
firstDay <- i-3
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
low10DF <- filter(moveDF, is.na(moveDF$low10DAvgArea)==FALSE)
tblTab <- tbl_df(low10DF)
runMonth <- group_by(tblTab,year(date)) %>%
group_by(month(date),add=TRUE) %>%
summarise(MonAvgLowArea=mean(low10DAvgArea))
for(i in 4:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 1:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 3:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 6:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
5:725
# Monthly stats using lowest consecutive 10 days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 4:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
# Monthly stats using lowest consecutive 10 days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 6:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
for(i in 4:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-6)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-4)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
# Monthly stats using lowest consecutive 10 days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-7)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-20)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
slice(interTab[[a]],1:10)
sli <- slice(interTab[[a]],1:10)
mean(sli$normalizedArea)
View(hydrograph)
View(runDays)
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in 5:(allDays-5)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
mean(runDays$normalizedArea)
i <- 5
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
View(runDays)
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
mean(runDays$normalizedArea)
moveDF$areaCh[i] <- mean(runDays$normalizedArea)
moveDF$areaCh[2] <- mean(runDays$normalizedArea)
5:25
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
range <- 5:(allDays-5)
for(i in seq_along(range)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
rm(i)
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
range <- 5:(allDays-5)
for(i in seq_along(range)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
seq_along(range)
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
seq(5,725,1)
hgut <- seq(5,725,1)
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in seq(5,(allDays-5),1)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i] <- mean(runDays$normalizedArea)
}
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF$low10DAvgArea[i]
moveDF$low10DAvgArea[1]
moveDF$low10DAvgArea[730]
i <- 1
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
i <- 5
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
moveDF$lowArea[10] <- 999
moveDF$lowArea[1,10]
moveDF$lowArea[10,1]
moveDF$lowArea[1,1]
moveDF[1,1]
moveDF[1,2]
moveDF[10,2]
moveDF[i,2]
moveDF$lowArea[10]
# Monthly stats using lowest consecutive 10 days
moveDF <- data.frame(date=interTab[[a]]$date)
allDays <- length(moveDF$date)
for(i in seq(5,(allDays-5),1)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF[i,2] <- mean(runDays$normalizedArea)
}
moveDF <- data.frame(date=interTab[[a]]$date,low10DAvgArea=NA)
moveDF <- data.frame(date=interTab[[a]]$date,low10DAvgArea=NA)
allDays <- length(moveDF$date)
for(i in seq(5,(allDays-5),1)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF[i,2] <- mean(runDays$normalizedArea)
}
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
low10DF <- filter(moveDF, is.na(moveDF$low10DAvgArea)==FALSE)
tblTab <- tbl_df(low10DF)
runMonth <- group_by(tblTab,year(date)) %>%
group_by(month(date),add=TRUE) %>%
summarise(MonAvgLowArea=mean(low10DAvgArea))
source("avg.month.area.R")
avgMonthlyArea <- lapply(lifestages, function(a) avg.month.area(a,interTab))
names(avgMonthlyArea) <- lifestages
View(avgMonthlyArea)
View(avgMonthlyArea[["adult"]])
moveDF <- data.frame(date=interTab[[a]]$date,low10DAvgArea=NA)
allDays <- length(moveDF$date)
for(i in seq(5,(allDays-5),1)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF[i,2] <- mean(runDays$normalizedArea)
}
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
View(moveDF)
moveDF <- data.frame(date=interTab[[a]]$date,low10DAvgArea=NA)
allDays <- length(moveDF$date)
for(i in seq(5,(allDays-5),1)){
firstDay <- i-4
lastDay <- i+5
runDays <- dplyr::slice(interTab[[a]],firstDay:lastDay) # creates subset of observations for X-days
moveDF[i,2] <- mean(runDays$normalizedArea)
}
moveDF$day <- as.numeric(format(as.Date(moveDF$date,format="%m/%d/%Y"),"%d"))
low10DF <- filter(moveDF, is.na(moveDF$low10DAvgArea)==FALSE)
View(low10DF)
